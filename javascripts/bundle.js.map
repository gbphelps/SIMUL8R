{"version":3,"sources":["webpack:///webpack/bootstrap 17f24feaa86ec16e658f","webpack:///./javascripts/main.js","webpack:///./javascripts/coordinate.js","webpack:///./javascripts/shapes.js","webpack:///./javascripts/color.js","webpack:///./javascripts/vector_fields.js","webpack:///./javascripts/moving_point.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;;;AAGA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,GAAG;AACH;AACA;AACA;;;AAGA;AACA,+BAA+B;;AAE/B;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,iBAAiB;AAChC;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;AAKA;AACA;AACA,CAAC;;;;;;;;ACvED;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;AAID;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB,sBAAsB;AACtB,qBAAqB;AACrB,sBAAsB;AACtB;AACA;;AAEA;AACA,+DAA+D;AAC/D;AACA;AACA;AAAA;AAAA;;;;;;;;;;ACrEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;ACfA;;;AAGA,iBAAiB;AACjB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;AACtB,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;AACA;;AAEA,qBAAqB,YAAY;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4CAA4C;AAC5C,4CAA4C;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9FA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 17f24feaa86ec16e658f","import Coord from './coordinate'\nimport RGBA from './color'\nimport Mesh from './vector_fields'\nimport * as Shapes from './shapes'\nimport MovingPoint from './moving_point'\n\n\nfunction rand() {return Math.random()*2-1;}\n////////////////////////////////////////////\nlet running;\nlet meshes = [];\nmeshes.push(new Mesh(10,.04));\nmeshes.push(new Mesh(20,.02));\n\nfunction calcNoise(point){\n  let noise = new Coord(0,0);\n  meshes.forEach(function(mesh){\n    if(typeof mesh == \"object\")\n      {noise = noise.add(mesh.getNoise(point));}\n    else\n      {noise = noise.add(mesh(point));}\n  })\n  return noise;\n};\n////////////////////////////////////////////\n\n\nfunction move(stream,color){\n  if (stream.position.error()){return false;}\n\n  let noise = calcNoise(stream.position).multiply(.3);\n  let friction = stream.velocity.multiply(.3);\n  let wind = new Coord(0,0);\n\n  let acceleration = noise.subtract(friction).add(wind).multiply(.5)\n\n  if (acceleration.belowThreshold()) return false;\n\n  let velocity = stream.velocity.add(acceleration);\n  let position = stream.position.add(velocity);\n\n  stream.position.lineTo(position,color.print());\n  return new MovingPoint(position,velocity);\n}\n\nfunction nextFrame(streams,color){\n  let newStreams = [];\n\n  for (let i=0;i<streams.length;i++){\n    let stream = move(streams[i],color);\n    if (stream){newStreams = newStreams.concat(stream);}\n  }\n  return newStreams;\n}\n\n///////////////////////////////////////////////////\nfunction update(color,streams){\n  if (color.a <.01 || streams.length==0) cancelAnimationFrame(running);\n    streams = nextFrame(streams,color);\n    color = color.update();\n    running = requestAnimationFrame(()=>update(color,streams))\n}\n\nlet magenta = new RGBA(255,0,0,.3);\nlet aqua = new RGBA(255,0,255,.3);\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', ()=>{\n  running = requestAnimationFrame(()=>update(aqua,Shapes.grid(-.5,.5,-.5,.5,50)))\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./javascripts/main.js\n// module id = 0\n// module chunks = 0","let canvas, ctx;\n\ndocument.addEventListener('DOMContentLoaded',()=>{\n  canvas = document.getElementById('streams');\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerWidth;\n  ctx = canvas.getContext(\"2d\");\n})\n\n\n\nexport default class Coord {\n  constructor(x, y){\n    this.x = x;\n    this.y = y;\n  }\n\n  magnitude(){\n    return Math.sqrt(this.x*this.x + this.y*this.y);\n  }\n\n  dotProduct(vector){\n    return this.x * vector.x + this.y * vector.y;\n  }\n\n  add(vector){\n    return new Coord(this.x+vector.x,this.y+vector.y);\n  }\n  subtract(vector){\n    return new Coord(this.x-vector.x,this.y-vector.y);\n  }\n\n  multiply(scalar){\n    return new Coord(this.x*scalar,this.y*scalar);\n  }\n\n  plot(color='white'){\n    let x = (this.x + 1) * canvas.height/2;\n    let y = (1 - this.y) * canvas.width/2;\n    ctx.moveTo(x,y);\n    ctx.arc(x,y,1,0,Math.PI*2);\n    ctx.fillStyle=color;\n    ctx.fill();\n  }\n\n  lineTo(point,color='white'){\n    let x = (this.x + 1) * canvas.height/2;\n    let y = (1 - this.y) * canvas.width/2;\n    ctx.beginPath();\n    ctx.strokeStyle=color;\n    ctx.moveTo(x,y);\n    let x2 = (point.x + 1) * canvas.height/2;\n    let y2 = (1 - point.y) * canvas.width/2;\n    ctx.lineTo(x2,y2);\n    ctx.stroke();\n  }\n\n  error(){\n    if (this.x >= 1){return true;}\n    if (this.x <= -1){return true;}\n    if (this.y >= 1){return true;}\n    if (this.y <= -1){return true;}\n    return false;\n  }\n\n  belowThreshold(){\n    if (Math.abs(this.x)<0.000001 && Math.abs(this.y)<.000001){return true;}\n    return false;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./javascripts/coordinate.js\n// module id = 1\n// module chunks = 0","import MovingPoint from './moving_point'\nimport Coord from './coordinate'\n\n\nexport const line = (start,end,n) =>\n{\n  let result=[];\n  let xinc = (end.x-start.x)/n;\n  let yinc = (end.y-start.y)/n;\n  for (let i=0;i<=n;i++)\n  {\n    let x = start.x + i*xinc;\n    let y = start.y + i*yinc;\n    result.push(new MovingPoint(new Coord(x,y)));\n  }\n  return result;\n}\n\n\nexport const circle = (center,radius,points,theta0=0) =>\n{\n  let theta_inc = (2*Math.PI-theta0)/points;\n  let theta=theta0;\n  let result = [];\n\n  for (let i=0;i<points;i++)\n  {\n    let x = radius * Math.cos(theta) + center.x;\n    let y = radius * Math.sin(theta) + center.y;\n    result.push(new MovingPoint(new Coord(x,y)));\n    theta += theta_inc;\n  }\n  return result;\n}\n\nexport const grid = (xmin,xmax,ymin,ymax,n) =>\n{\n  let result=[];\n  let xinc = (xmax-xmin)/n;\n  let yinc = (ymax-ymin)/n;\n\n  for (let x=xmin; x<=xmax; x+= xinc){\n    for (let y=ymin; y<=ymax; y+= yinc){\n      result.push(new MovingPoint(new Coord(x,y)));\n    }\n  }\n\n  return result;\n}\n\n// Example initializations:\n// let start = new Coord(-1,-1);\n// let end = new Coord(1,1);\n// let points1 =\n//     Shapes.circle(new Coord(-.15,.5),.3,1000);\n// let points2 = Shapes.circle(new Coord(.15,.5),.3,1000);\n// let points3 = Shapes.line(start,end,1000);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./javascripts/shapes.js\n// module id = 2\n// module chunks = 0","export default class RGBA {\n  constructor(r,g,b,a){\n    this.r=r;\n    this.g=g;\n    this.b=b;\n    this.a=a;\n  }\n\n  print(){\n    return \"rgba(\" + this.r + \",\" + this.g + \",\" + this.b + \",\" + this.a + \")\";\n  }\n\n  update(){\n    return new RGBA(this.r,this.g,this.b,this.a*.99)\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./javascripts/color.js\n// module id = 3\n// module chunks = 0","import Coord from './coordinate'\n\n\nfunction rand() {return Math.random()*2-1;}\nfunction lerp(a,b,w) {return (1-w)*a + w*b;}\n\nfunction lerpVec(a,b,w)\n{\n  let x=lerp(a.x,b.x,w);\n  let y=lerp(a.y,b.y,w);\n  return new Coord(x,y);\n}\n\nfunction weight(dist){return dist;}\n  //{return (Math.sin(3/2*Math.PI+dist*Math.PI)+1)/2;}\n\n\nexport default class Mesh {\n  constructor(numLines, influence){\n    let noise=[];\n    let increments=[];\n\n    for (let i=0;i<=numLines;i++){\n        let num = -1 + 2 * i/numLines;\n        increments.push(num);\n        noise[i]=[];\n\n        for (let j=0;j<=numLines;j++){\n           noise[i][j]=new Coord(rand(),rand());\n         }\n      }\n\n    this.increments=increments;\n    this.noise=noise;\n    this.influence=influence;\n    this.numLines=numLines;\n  }\n\n  getNoise(point){\n    let xnode=0;\n    let ynode=0;\n\n    while (this.increments[xnode]<=point.x){xnode++;}\n    while (this.increments[ynode]<=point.y){ynode++;}\n\n    //let c = Math.ceil((point.x+1)*numLines/2)*2/numLines-1;\n    // document.write(c);\n\n    let bottomLeft=\n       this.noise[xnode-1][ynode-1];\n\n    let bottomRight=\n        this.noise[xnode][ynode-1];\n\n    let topLeft=\n        this.noise[xnode-1][ynode];\n\n    let topRight=\n        this.noise[xnode][ynode];\n\n    let xscale=(point.x-this.increments[xnode-1])*this.numLines/2;\n    let yscale=(point.y-this.increments[ynode-1])*this.numLines/2;\n\n    let bottom=\n      lerpVec(bottomLeft,bottomRight,weight(xscale));\n    let top=\n      lerpVec(topLeft,topRight,weight(xscale));\n    return(\n      lerpVec(bottom,top,weight(yscale)).multiply(this.influence));\n  }\n}\n\n\n///////////////////////////////\n\n\nfunction radialBias(origin,intensity){\n  return (point)=>\n    {\n      let distance = point.subtract(origin);\n      let scale = 5 * Math.pow(100,distance.magnitude()*-1);\n      return distance.multiply(intensity*scale);\n    }\n}\n\nfunction whorl(origin,intensity){\n  return (point)=>\n    {\n      let distance = point.subtract(origin);\n      distance = new Coord(-distance.y,distance.x);\n    let scale =\n        10 * Math.pow(100,distance.magnitude()*-1);\n      return distance.multiply(intensity*scale);\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./javascripts/vector_fields.js\n// module id = 4\n// module chunks = 0","import Coord from './coordinate'\n\nexport default class MovingPoint {\n  constructor(point, velocity=new Coord(0,0)){\n    this.position = point;\n    this.velocity = velocity;\n  }\n\n  fracture(){\n    if (this.velocity.magnitude()>.00) {return this;}\n    let vFrac = new coord(rand()*.03,rand()*.03);\n    let v1 = this.velocity.add(vFrac);\n    let v2 = this.velocity.subtract(vFrac);\n    return [\n      new movingPoint(this.position,v1),\n      new movingPoint(this.position,v2)\n    ];\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./javascripts/moving_point.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}